// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/sync": {
            "get": {
                "description": "Retrieves all sync records from Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sync"
                ],
                "summary": "Get all sync records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.SyncResponse"
                            }
                        }
                    }
                }
            }
        },
        "/sync/trigger": {
            "post": {
                "description": "Triggers a new synchronization operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sync"
                ],
                "summary": "Trigger new sync operation",
                "responses": {
                    "201": {
                        "description": "Sync trigger is requested",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sync/{timestamp}": {
            "get": {
                "description": "Retrieves a specific sync record by its timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sync"
                ],
                "summary": "Get sync record by timestamp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Timestamp of the sync record",
                        "name": "timestamp",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SyncResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.SyncResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/redis.RedisValue"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "redis.RedisValue": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "sha": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Beyond Sync API",
	Description:      "API for managing sync operations",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
